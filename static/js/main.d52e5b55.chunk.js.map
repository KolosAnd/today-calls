{"version":3,"sources":["components/Title/Title.js","utils/timeFunc.js","context/context.js","components/AddCallForm/AddCallForm.tsx","components/TableCallItem/TableCallItem.js","components/CallsList/CallsList.js","components/Header/Header.js","components/NextCall/NextCall.js","redux/types.js","redux/rootReducer.js","App.js","index.js","components/Header/Header.module.css","components/Title/Title.module.css","components/NextCall/NextCall.module.css"],"names":["Title","props","className","mainClass","title","title__name","classes","text","TimeFunc","time","now","undefined","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","startDayTimeInMilisec","timeInMiliseconds","hoursNumber","Number","minutesNumber","timeToMs","mmss","toString","Error","ContractContext","createContext","initialState","id","name","phone","milisec","schema","yup","required","test","value","min","max","typeError","AddCallForm","addOneCall","useState","call","setCall","calls","useContext","defaultValues","resolver","yupResolver","useForm","register","errors","formState","handleSubmit","reset","useEffect","finalArr","concat","localStorage","setItem","JSON","stringify","onSubmit","data","form","FormData","append","timeInMilisec","newCall","replaceAll","onChange","e","target","type","placeholder","maxLength","message","TableCallItem","remove","hidden","isFinished","setIsFinished","classMain","setClassMain","timeInSeconds","onClick","checked","disabled","CallsList","sortType","setSortType","sortButtonType","setSortButtonType","length","sort","a","b","sortTimeAscending","sortTimeDescending","sortNameAscending","sortNameDescending","map","callItem","Header","header","header__container","header__title","NextCall","callsSortArr","setCallsSortArr","nextCall","setNextCall","i","timerId","timeNextCall","clearInterval","setInterval","MainClass","nextCall__wrap","nextCall__inputWrap","nextCall__input","nextCall__inputName","nextCall__inputPhone","nextCall__inputTime","types","rootReducer","state","action","App","store","createStore","composeWithDevTools","subscribe","console","log","getState","parse","getItem","getCalls","setCalls","Provider","oneCall","callID","removeCalls","filter","c","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d52e5b55.chunk.js","sourcesContent":["import mainClass from \"./Title.module.css\"\r\nimport React from \"react\";\r\n\r\nexport const Title = (props) => {\r\n    return (\r\n        <div className={mainClass.title}>\r\n            <h2 className={`${mainClass.title__name} ${props.classes}`}>{props.text}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const TimeFunc = (time,now) => {\r\n    if(time == undefined)return ;\r\n    const date = new Date(now);\r\n\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n\r\n    let startDayTimeInMilisec = date - timeInMiliseconds( hours, minutes, seconds);\r\n\r\n    let hoursNumber = (time[0]*10)+Number(time[1]);\r\n    let minutesNumber = (time[3]*10)+Number(time[4]);\r\n\r\n    if(typeof time == \"number\"){\r\n        return (startDayTimeInMilisec + time);\r\n    }\r\n\r\n    return (startDayTimeInMilisec + timeInMiliseconds(hoursNumber,minutesNumber,0))\r\n}\r\n\r\nexport function timeInMiliseconds(hours,minutes,seconds) {\r\n    return ( (hours * 3600000) + (minutes * 60000) + (seconds * 1000));\r\n}\r\n\r\n\r\n// translate time (\"14:25\") to milisec\r\nexport const timeToMs = (mmss) => {\r\n    if(typeof mmss !== 'string') {\r\n        if(mmss.toString()) mmss = mmss.toString();\r\n        else throw new Error(\"Invalid input\");\r\n    }\r\n    let hoursNumber = (mmss[0]*10)+Number(mmss[1]);\r\n    let minutesNumber = (mmss[3]*10)+Number(mmss[4]);\r\n\r\n    return timeInMiliseconds(hoursNumber,minutesNumber,0);\r\n\r\n}","import {createContext} from 'react'\r\n\r\nexport const ContractContext = createContext( null);","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Title} from \"../Title/Title\";\r\nimport \"./addCallForm.scss\";\r\nimport {TimeFunc} from \"../../utils/timeFunc\";\r\nimport * as yup from \"yup\";\r\nimport ICallScheme from \"./typesAddCall\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {ContractContext} from \"../../context/context\";\r\n\r\n\r\nconst initialState: ICallScheme = {\r\n    id: 0,name: '',phone: '',time: '',milisec: 0\r\n}\r\n\r\nconst textOnly = (value) => /^\\D+$/.test(value);\r\nconst dateReg = (value) => /^\\d\\d:\\d\\d+$/.test(value);\r\nconst phoneNumberReg = (value) => /^\\+|(0{2})|[\\(]?\\d{3}[\\)]?[-\\s]?\\d{3}[-\\s]?\\d{3}[-\\s]?\\d{3}$/.test(value);\r\n\r\nconst schema = yup.object({\r\n    // @ts-ignore\r\n    name: yup.string().required('Обязательное поле')\r\n        .test('Только текст', 'Только текст', textOnly).min(2, 'Минимум 2 символа').max(30, 'Максимум 30 символов')\r\n        .typeError('Только текст'),\r\n    // @ts-ignore\r\n    phone: yup.string().required('Обязательное поле')\r\n        .test('+(xxx)-xxx-xxx-xxx', '+(xxx)-xxx-xxx-xxx', phoneNumberReg).min(13, 'Телефон минимум 13 символов').max(18, 'Телефон максимум 18 символов')\r\n        .typeError('Введите коректный номер'),\r\n    // @ts-ignore\r\n    time: yup.string().required('Обязательное поле').test('Некоректная дата', 'Некоректная дата', dateReg).typeError('Только дата'),\r\n}).required();\r\n\r\nexport const AddCallForm = ({addOneCall}) => {\r\n    const [call,setCall] = useState(initialState);\r\n\r\n    const context:Record<string,any> = useContext(ContractContext);\r\n    const calls = context.calls;\r\n\r\n    const defaultValues = {\r\n        resolver: yupResolver(schema)\r\n    }\r\n    const {register, formState: {errors}, handleSubmit, reset} = useForm(defaultValues);\r\n\r\n    const addCall =  (data: any) => {\r\n\r\n        const form = new FormData();\r\n        form.append(\"name\", data.name);\r\n        form.append(\"phone\", data.phone);\r\n        form.append(\"time\", data.time);\r\n\r\n        const timeInMilisec:number = TimeFunc(call.time, Date.now());\r\n        let newCall = {\r\n            id:  Date.now(),\r\n            milisec: timeInMilisec,\r\n            phone: '00'+call.phone.replaceAll(/[\\(\\)\\-\\+\\s]/g,'').replaceAll(/^(0{2})/g,'')\r\n        }\r\n        setCall({ ...call, ...newCall});\r\n\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(call.id){\r\n            let finalArr = calls.concat([call]);\r\n            localStorage.setItem('list', JSON.stringify(finalArr));\r\n            addOneCall(call);\r\n            setCall(initialState);\r\n        }\r\n    },[call]);\r\n\r\n    return (\r\n        <div className=\"add-call\">\r\n            <Title text={\"Add call\"} />\r\n\r\n            <form onSubmit={handleSubmit(addCall)}>\r\n                <div className=\"add-call__inputs-wrap\">\r\n                    <div className=\"add-call__input-block name\">\r\n                        <input\r\n                            {...register(\"name\")}\r\n                            value={call.name}\r\n                            onChange={e => {setCall({...call, name: e.target.value}) }}\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            className={errors.name\r\n                                    ? \"add-call__input error\" : \"add-call__input\"\r\n                            }\r\n                            placeholder=\"Name\"\r\n                            maxLength={30}\r\n                        />\r\n                        { <span className=\"add-call__error-message\">{errors.name?.message}</span>}\r\n                    </div>\r\n\r\n                    <div className=\"add-call__input-block phone\">\r\n                        <input\r\n                            {...register(\"phone\")}\r\n                            onChange={e => {setCall({...call, phone: e.target.value}) }}\r\n                            name=\"phone\"\r\n                            value={call.phone}\r\n                            placeholder=\"+(ХХX)-XXХ-XХХ-ХХХ\"\r\n                            type=\"text\"\r\n                            className={errors.phone\r\n                                ? \"add-call__input error\" : \"add-call__input\"\r\n                            }\r\n                        />\r\n                        { <span className=\"add-call__error-message\">{errors.phone?.message}</span>}\r\n                    </div>\r\n\r\n                    <div className=\"add-call__input-block time\">\r\n                        <input type=\"time\"\r\n                               name=\"time\"\r\n                               {...register(\"time\")}\r\n                               value={call.time}\r\n                               onChange={e => {setCall({...call, time: e.target.value}) }}\r\n                               className={errors.time\r\n                                   ? \"add-call__input error\" : \"add-call__input\"\r\n                               }\r\n                        />\r\n                        { <span className=\"add-call__error-message\">{errors.time?.message}</span>}\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"button add-call__button\">Add call</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {TimeFunc, timeToMs} from \"../../utils/timeFunc\";\r\n\r\nexport const TableCallItem = ({remove, call, hidden}) => {\r\n\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const [classMain, setClassMain] = useState('calls-list__item');\r\n\r\n    useEffect(() => {\r\n        if(call.time) {\r\n            const timeInSeconds = timeToMs(call.time);\r\n            const timeInMilisec = TimeFunc(timeInSeconds, Date.now());\r\n            if (Date.now() > timeInMilisec) setIsFinished(true);\r\n        }\r\n    }, [call]);\r\n\r\n    useEffect(()=> {\r\n        if (hidden == 'next') {\r\n            if(isFinished) setClassMain(' hidden'); else setClassMain('');\r\n        }\r\n        if (hidden == 'finished') {\r\n            if(isFinished) setClassMain(''); else setClassMain(' hidden');\r\n        }\r\n        if (hidden == 'all') setClassMain('');\r\n\r\n    }, [hidden]);\r\n\r\n\r\n    return (\r\n        <>\r\n            { call &&\r\n                <div className={`calls-list__item ${classMain}`}>\r\n                    <div className=\"calls-list__col name-col\">\r\n                        {call.name}\r\n                    </div>\r\n                    <div className=\"calls-list__col phone-col\">\r\n                        {call.phone}\r\n                    </div>\r\n                    <div className=\"calls-list__col time-col\" data-milisec={call.milisec}>\r\n                        {call.time}\r\n                    </div>\r\n                    <div className=\"calls-list__col time-delete\">\r\n                        <span onClick={() => remove(call.id)}>delete</span>\r\n                    </div>\r\n                    <div className=\"calls-list__col time-finish\">\r\n                        <input checked={isFinished} type=\"checkbox\" disabled />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import \"./callsList.scss\"\r\nimport React, { useState} from \"react\";\r\nimport {TableCallItem} from \"../TableCallItem/TableCallItem\";\r\n\r\nexport const CallsList = ({calls, remove}) => {\r\n\r\n    const [sortType, setSortType ]= useState('');\r\n    const [sortButtonType, setSortButtonType ]= useState('all');\r\n\r\n    //по возростанию\r\n    const sortTimeAscending = (a,b) =>  (a.milisec - b.milisec) ;\r\n\r\n    //по убиванию\r\n    const sortTimeDescending = (a,b) => (b.milisec - a.milisec);\r\n\r\n    //по возростанию\r\n    const sortNameAscending = (a,b) => {\r\n        if (a.name > b.name) return 1;\r\n        if (a.name < b.name) return -1;\r\n        return 0;\r\n    } ;\r\n\r\n    //по убиванию\r\n    const sortNameDescending = (a,b) => {\r\n        if (a.name < b.name) return 1;\r\n        if (a.name > b.name) return -1;\r\n        return 0;\r\n    };\r\n\r\n    const sortFunc =(a,b) => {\r\n        if(sortType === 'ascTime') {\r\n            return  sortTimeAscending(a,b);\r\n        } else if(sortType === 'descTime') {\r\n            return  sortTimeDescending(a,b);\r\n        } else if (sortType === 'ascName') {\r\n            return  sortNameAscending(a,b);\r\n        }else if (sortType === 'descName') {\r\n            return  sortNameDescending(a,b);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calls-list\">\r\n            <div className=\"calls-list__table\">\r\n                <div className=\"calls-list__headers\">\r\n                    <div className=\"calls-list__col name-col\">\r\n                        <span>Name</span>\r\n                        <div className=\"calls-list__sort-block\">\r\n                            <div className=\"calls-list__sort-block-up\" onClick={() => setSortType('ascName')}/>\r\n                            <div className=\"calls-list__sort-block-down\" onClick={() =>  setSortType('descName')}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"calls-list__col phone-col\">Phone number</div>\r\n                    <div className=\"calls-list__col time-col\">\r\n                        <span>Time</span>\r\n                        <div className=\"calls-list__sort-block\">\r\n                            <div className=\"calls-list__sort-block-up\" onClick={() => setSortType('ascTime')}/>\r\n                            <div className=\"calls-list__sort-block-down\" onClick={() =>  setSortType('descTime')}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"calls-list__col time-delete\"/>\r\n                    <div className=\"calls-list__col time-finish\"/>\r\n                </div>\r\n                <div className=\"calls-list__cols-wrap\">\r\n                    {\r\n                        calls.length\r\n                            ? calls.sort(sortFunc).map ( (callItem) =>\r\n                                <TableCallItem\r\n                                    hidden={sortButtonType}\r\n                                    remove={remove}\r\n                                    call={callItem}\r\n                                    key={callItem.id}\r\n                                />)\r\n                            : <div className=\"calls-list__item\">\r\n                                <h1 className=\"calls-list__no-calls\">no calls today</h1>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"calls-list__buttons-wrap\">\r\n                <button onClick={() =>setSortButtonType('all') } type={\"button\"} className=\"button calls-list__button\">All</button>\r\n                <button onClick={() =>setSortButtonType('next')} type={\"button\"} className=\"button calls-list__button\">Next</button>\r\n                <button onClick={() =>setSortButtonType('finished')} type={\"button\"} className=\"button calls-list__button\">Finished</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport mainClass from \"./Header.module.css\";\r\nimport {Title} from \"../Title/Title\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={mainClass.header}>\r\n            <div className={`${mainClass.header__container}  container`}>\r\n                <Title classes={`${mainClass.header__title} main-title`} text={\"Today calls app\"} />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, {useEffect, useState} from \"react\";\r\nimport {Title} from \"../Title/Title\";\r\nimport MainClass from \"./NextCall.module.css\"\r\nimport {TimeFunc, timeToMs} from \"../../utils/timeFunc\";\r\n\r\nconst NextCall = ({calls}) => {\r\n    const [callsSortArr, setCallsSortArr] = useState([]);\r\n    const [nextCall, setNextCall] = useState({});\r\n\r\n    useEffect(  () => {\r\n        if(calls.length > 0){\r\n            setCallsSortArr(calls.sort((a,b) =>  a.milisec > b.milisec ? 1 : -1 ));\r\n        }\r\n    },[calls]);\r\n\r\n    useEffect(()=> {\r\n\r\n        if(callsSortArr.length > 0) {\r\n\r\n            for(let i=0; i<callsSortArr.length; i++){\r\n                const timeInSeconds = timeToMs(callsSortArr[i].time);\r\n                const timeInMilisec = TimeFunc(timeInSeconds, Date.now());\r\n\r\n                if (Date.now() < timeInMilisec) {setNextCall(callsSortArr[i]); break;}\r\n                else {setNextCall(null)}\r\n            }\r\n            const timerId = timeNextCall();\r\n            return  (() =>{\r\n                clearInterval(timerId);\r\n            })\r\n        }\r\n    },[callsSortArr]);\r\n\r\n    const timeNextCall = () => {\r\n\r\n    return setInterval(() =>{\r\n            for(let i=0; i<callsSortArr.length; i++){\r\n                const timeInSeconds = timeToMs(callsSortArr[i].time);\r\n                const timeInMilisec = TimeFunc(timeInSeconds, Date.now());\r\n                if (Date.now() < timeInMilisec) {setNextCall(callsSortArr[i]); break;}\r\n            }\r\n        },60000);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={MainClass.nextCall}>\r\n            <div className={MainClass.nextCall__wrap}>\r\n                <Title text={\"Next call\"} />\r\n                {nextCall ?\r\n                    <div className={MainClass.nextCall__inputWrap}>\r\n                        <div className={MainClass.nextCall__input + ' ' + MainClass.nextCall__inputName}>{nextCall.name}</div>\r\n                        <div className={MainClass.nextCall__input  + ' ' + MainClass.nextCall__inputPhone}>{nextCall.phone}</div>\r\n                        <div className={MainClass.nextCall__input  + ' ' + MainClass.nextCall__inputTime}> {nextCall.time}</div>\r\n                    </div>\r\n                    :\r\n                    <div className={MainClass.nextCall__inputWrap}>\r\n                        <div className={MainClass.nextCall__input + ' ' + MainClass.nextCall__inputName}>No next call</div>\r\n                    </div>\r\n\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NextCall;","export const types = {\r\n    ALL: 'filter/ALL',\r\n    NEXT: 'filter/NEXT',\r\n    FINISH: 'filter/FINISH'\r\n}","import {types} from \"./types\";\r\n\r\nfunction rootReducer(state = { value: 'all' }, action) {\r\n    switch (action.type) {\r\n        case types.ALL:\r\n            return { value: 'all' }\r\n        case types.NEXT:\r\n            return { value: 'next' }\r\n        case types.FINISH:\r\n            return { value: 'finish' }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import './styles/global.scss'\r\nimport {AddCallForm} from \"./components/AddCallForm/AddCallForm\";\r\nimport {CallsList} from \"./components/CallsList/CallsList\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport \"./components/AddCallForm/addCallForm.scss\";\r\nimport Header from \"./components/Header/Header\";\r\nimport NextCall from \"./components/NextCall/NextCall\";\r\nimport {ContractContext} from \"./context/context\";\r\nimport {createStore} from 'redux';\r\nimport rootReducer from \"./redux/rootReducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nfunction App() {\r\n    let store = createStore(rootReducer, composeWithDevTools());\r\n    store.subscribe(() => console.log(store.getState()))\r\n    const getCalls = () => {\r\n        let calls = JSON.parse(localStorage.getItem('list'));\r\n        if (calls == null) {\r\n            return [];\r\n        }\r\n        return calls;\r\n    }\r\n    const [calls, setCalls] = useState(() => {\r\n      return getCalls();\r\n    });\r\n\r\n\r\n    const removeCalls = (callID) => {\r\n        let removeCalls = calls.filter(c => c.id !== callID);\r\n        setCalls(removeCalls);\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(calls.length) {\r\n            localStorage.setItem('list', JSON.stringify(calls));\r\n        }\r\n    },[calls]);\r\n\r\n\r\n\r\n    const addOneCall = ((oneCall )=> {\r\n       setCalls([...calls,oneCall]);\r\n    });\r\n\r\n    return (\r\n        <ContractContext.Provider value={{calls}}>\r\n            <div className=\"App\">\r\n               <Header />\r\n                <div className=\"container\">\r\n                    <div className=\"main-wrap\">\r\n\r\n                        <NextCall calls={calls}/>\r\n\r\n                        <div className=\"calls-wrap\">\r\n                            <AddCallForm addOneCall={addOneCall}/>\r\n\r\n                            <CallsList\r\n                                remove={removeCalls} calls={calls}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </ContractContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2vzj5\",\"header__container\":\"Header_header__container__3VRL9\",\"header__title\":\"Header_header__title__2pv23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__38Rue\",\"title__name\":\"Title_title__name__G7AnC\",\"main-title\":\"Title_main-title__15ozn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nextCall\":\"NextCall_nextCall__2hiNO\",\"nextCall__wrap\":\"NextCall_nextCall__wrap__E-JmG\",\"nextCall__title\":\"NextCall_nextCall__title__3uk50\",\"nextCall__inputWrap\":\"NextCall_nextCall__inputWrap__3k8d4\",\"nextCall__inputsWrap\":\"NextCall_nextCall__inputsWrap__2i2Go\",\"nextCall__input\":\"NextCall_nextCall__input__3VO86\",\"nextCall__inputName\":\"NextCall_nextCall__inputName__3dOlZ\",\"nextCall__inputPhone\":\"NextCall_nextCall__inputPhone__37SD1\",\"nextCall__inputTime\":\"NextCall_nextCall__inputTime__2rI6V\"};"],"sourceRoot":""}